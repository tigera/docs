# Allow access to ES Gateway from components that need to talk to Elasticsearch or Kibana.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.es-gateway-access
  namespace: tigera-elasticsearch
spec:
  order: 1
  tier: allow-tigera
  selector: k8s-app == 'tigera-secure-es-gateway'
  types:
    - Ingress
    - Egress
  ingress:
    - action: Allow
      protocol: TCP
      source:
        selector: k8s-app == 'fluentd-node' || k8s-app == 'fluentd-node-windows'
        namespaceSelector: name == 'tigera-fluentd'
      destination:
        ports: [5554]
    - action: Allow
      protocol: TCP
      source:
        selector: k8s-app == 'eks-log-forwarder'
        namespaceSelector: name == 'tigera-fluentd'
      destination:
        ports: [5554]
    - action: Allow
      protocol: TCP
      source:
        selector: job-name == 'intrusion-detection-es-job-installer'
        namespaceSelector: name == 'tigera-intrusion-detection'
      destination:
        ports: [5554]
    - action: Allow
      protocol: TCP
      source:
        selector: k8s-app == 'elastic-curator'
        namespaceSelector: name == 'tigera-elasticsearch'
      destination:
        ports: [5554]
    - action: Allow
      protocol: TCP
      source:
        selector: k8s-app == 'tigera-manager'
        namespaceSelector: name == 'tigera-manager'
      destination:
        ports: [5554]
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'compliance-benchmarker'
        namespaceSelector: name == 'tigera-compliance'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'compliance-controller'
        namespaceSelector: name == 'tigera-compliance'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'compliance-server'
        namespaceSelector: name == 'tigera-compliance'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'compliance-snapshotter'
        namespaceSelector: name == 'tigera-compliance'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'compliance-reporter'
        namespaceSelector: name == 'tigera-compliance'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'intrusion-detection-controller'
        namespaceSelector: name == 'tigera-intrusion-detection'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'elastic-operator'
        namespaceSelector: name == 'tigera-eck-operator'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'tigera-elasticsearch-metrics'
        namespaceSelector: name == 'tigera-elasticsearch'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      source:
        selector: k8s-app == 'tigera-dpi'
        namespaceSelector: name == 'tigera-dpi'
    - action: Allow
      destination:
        ports: [5554]
      protocol: TCP
      # The operator needs access to Elasticsearch and Kibana (through ES Gateway), however, since the operator is on the
      # hostnetwork it's hard to create specific network policies for it.
      # If the node CIDRs are known they can be added to this rule to restrict access to just the nodes in the cluster
  egress:
  {%- if include.containerOrchestrationPlatform == "openshift" %}
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows to communicate with openshift-dns.
      namespaceSelector: projectcalico.org/name == "openshift-dns"
      selector: dns.operator.openshift.io/daemonset-dns == "default"
      ports: [5353]
    {%- else %}
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows communicate with kube-dns.
      namespaceSelector: projectcalico.org/name == 'kube-system'
      selector: k8s-app == 'kube-dns'
      ports: [53]
    {%- endif %}
  - action: Allow
    protocol: TCP
    destination:
      # This egress rule allows to communicate with tigera-dex.
      namespaceSelector: projectcalico.org/name == 'tigera-dex'
      selector: k8s-app == 'tigera-dex'
      ports: [5556]
  - action: Allow
    protocol: TCP
    destination:
      # This egress rule in this policy allows compliance to communicate with kubernetes api server.
      namespaceSelector: projectcalico.org/name == 'default'
      selector: (provider == 'kubernetes' && component == 'apiserver' && endpoints.projectcalico.org/serviceName == 'kubernetes')
      # By default, kubernetes api server listens on [12388, 6443, 443]. If Api server is customized to listen
      # on different port, Include the port number below. DockerEE uses port 12388 for kubernetes apiserver service.
      ports: [443, 6443, 12388]
  - action: Allow
    protocol: TCP
    destination:
      namespaceSelector: projectcalico.org/name == 'tigera-elasticsearch'
      selector: elasticsearch.k8s.elastic.co/cluster-name == 'tigera-secure'
      ports: [9200]
  - action: Allow
    protocol: TCP
    destination:
      namespaceSelector: projectcalico.org/name == 'tigera-kibana'
      selector: k8s-app == 'tigera-secure'
      ports: [5601]

---

# Allow access to Elasticsearch client nodes from Kibana, ECK Operator and ES Gateway.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.elasticsearch-access
  namespace: tigera-elasticsearch
spec:
  order: 1
  tier: allow-tigera
  selector: elasticsearch.k8s.elastic.co/cluster-name == 'tigera-secure'
  types:
  - Ingress
  - Egress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'tigera-secure'
      namespaceSelector: name == 'tigera-kibana'
    destination:
      ports: [9200]
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'tigera-secure-es-gateway'
      namespaceSelector: name == 'tigera-elasticsearch'
    destination:
      ports: [9200]
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    source:
      selector: k8s-app == 'elastic-operator'
      namespaceSelector: name == 'tigera-eck-operator'
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    # If the node CIDRs are known they can be added to this rule to restrict access to just the nodes in the cluster
  egress:
{%- if include.containerOrchestrationPlatform == "openshift" %}
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows to communicate with openshift-dns.
      namespaceSelector: projectcalico.org/name == "openshift-dns"
      selector: dns.operator.openshift.io/daemonset-dns == "default"
      ports: [5353]
{%- else %}
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows communicate with kube-dns.
      namespaceSelector: projectcalico.org/name == 'kube-system'
      selector: k8s-app == 'kube-dns'
      ports: [53]
{%- endif %}
  - action: Allow
    protocol: TCP
    destination:
      # This egress rule allows to communicate with tigera-dex.
      namespaceSelector: projectcalico.org/name == 'tigera-dex'
      selector: k8s-app == 'tigera-dex'
      ports: [5556]
  - action: Allow
    protocol: TCP
    destination:
      # This egress rule allows to communicate with 'tigera-secure-es-gateway'.
      namespaceSelector: projectcalico.org/name == 'tigera-elasticsearch'
      selector: k8s-app == 'tigera-secure-es-gateway'
      ports: [5554]
  - action: Allow
    protocol: TCP
    destination:
      # This egress rule in this policy allows compliance to communicate with kubernetes api server.
      namespaceSelector: projectcalico.org/name == 'default'
      selector: (provider == 'kubernetes' && component == 'apiserver' && endpoints.projectcalico.org/serviceName == 'kubernetes')
      # By default, kubernetes api server listens on [12388, 6443, 443]. If Api server is customized to listen
      # on different port, Include the port number below. DockerEE uses port 12388 for kubernetes apiserver service.
      ports: [443, 6443, 12388]

---

# Allow kube-controllers to communicate with API server, DNS and elasticsearch.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.es-kube-controller-access
  namespace: calico-system
spec:
  order: 1
  tier: allow-tigera
  selector: k8s-app == 'es-calico-kube-controllers'
  types:
    - Egress
  egress:
{%- if include.containerOrchestrationPlatform == "openshift" %}
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows to communicate with openshift-dns.
      namespaceSelector: projectcalico.org/name == "openshift-dns"
      selector: dns.operator.openshift.io/daemonset-dns == "default"
      ports: [5353]
{%- else %}
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows to communicate with kube-dns.
      namespaceSelector: projectcalico.org/name == "kube-system"
      selector: k8s-app == "kube-dns"
      ports: [53]
{%- endif %}
  - action: Allow
    protocol: TCP
    destination:
      # By default, kubernetes api server listens on [12388, 6443, 443]. If Api server is customized to listen
      # on different port, Include the port number below. DockerEE uses port 12388 for kubernetes apiserver service.
      ports: [443, 6443, 12388]
  - action: Allow
    protocol: TCP
    destination:
      selector: k8s-app == 'tigera-secure-es-gateway'
      namespaceSelector: projectcalico.org/name == 'tigera-elasticsearch'
      ports: [5554]
  - action: Allow
    protocol: TCP
    destination:
      selector: k8s-app == 'tigera-manager'
      namespaceSelector: projectcalico.org/name == 'tigera-manager'
      ports: [9443]
