name: reviewdog
on: [pull_request]
jobs:
  vale:
    name: runner / vale
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        run: |
          # Get the list of changed files in this PR (only .md and .mdx files)
          git fetch origin ${{ github.event.pull_request.base.ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...HEAD | grep -E '\.(md|mdx)$' || true)
          echo "Changed markdown files:"
          echo "$CHANGED_FILES"
          # Save files to a variable, preserving newlines
          {
            echo 'files<<EOF'
            echo "$CHANGED_FILES"
            echo 'EOF'
          } >> $GITHUB_OUTPUT
          # Also save count for conditional execution
          FILE_COUNT=$(echo "$CHANGED_FILES" | grep -c . || echo "0")
          echo "count=$FILE_COUNT" >> $GITHUB_OUTPUT
      - name: Enable Corepack
        if: steps.changed-files.outputs.count > 0
        run: corepack enable
      - name: Setup Node.js with Yarn
        if: steps.changed-files.outputs.count > 0
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: yarn
      - name: Install dependencies
        if: steps.changed-files.outputs.count > 0
        run: yarn install --immutable
      - name: Install mdx2vast globally
        if: steps.changed-files.outputs.count > 0
        run: npm install -g mdx2vast
      - name: Setup reviewdog
        if: steps.changed-files.outputs.count > 0
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Install Vale
        if: steps.changed-files.outputs.count > 0
        run: |
          curl -sfL https://install.goreleaser.com/github.com/ValeLint/vale.sh | sh -s -- -b /usr/local/bin
      - name: Swap stuff
        if: steps.changed-files.outputs.count > 0
        run: |
          sudo apt-get install ripgrep
          # Only process the changed files instead of the entire repository
          if [ -n "${{ steps.changed-files.outputs.files }}" ]; then
            echo "${{ steps.changed-files.outputs.files }}" | while IFS= read -r file; do
              if [ -n "$file" ] && [ -f "$file" ]; then
                echo "Processing $file"
                perl -i -pe 's/\$\[[^\]]*\]/PICKLEVAR/g' "$file"
              fi
            done
          fi
      - name: Run Vale with Reviewdog
        if: steps.changed-files.outputs.count > 0
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a temporary Vale config without vocabulary for now
          cat > .vale-temp.ini << EOF
          StylesPath = .github/styles
          MinAlertLevel = warning
          Packages = MDX
          [*.{md,mdx}]
          BasedOnStyles = Vale, CalicoStyle
          TokenIgnores = '\$\[[^\]]+\]'
          EOF
          
          # Run Vale on each changed file and pipe to reviewdog
          if [ -n "${{ steps.changed-files.outputs.files }}" ]; then
            echo "${{ steps.changed-files.outputs.files }}" | while IFS= read -r file; do
              if [ -n "$file" ] && [ -f "$file" ]; then
                echo "Running Vale on $file"
                vale --output=line --config=.vale-temp.ini "$file" 2>&1 | \
                reviewdog -efm="%f:%l:%c:%t:%m" -name="vale" -reporter=github-pr-review || true
              fi
            done
          fi
